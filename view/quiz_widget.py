# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'quiz_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from constants import AnswerTypes, ThemeQuestion

class Ui_QuizWidget(object):
    def setupUi(self, QuizWidget):
        QuizWidget.setObjectName("QuizWidget")
        QuizWidget.resize(800, 600)
        self.PrevQuestionBtn = QtWidgets.QPushButton(QuizWidget)
        self.PrevQuestionBtn.setGeometry(QtCore.QRect(560, 10, 100, 30))
        self.PrevQuestionBtn.setObjectName("PrevQuestionBtn")
        self.NextQuestionBtn = QtWidgets.QPushButton(QuizWidget)
        self.NextQuestionBtn.setGeometry(QtCore.QRect(680, 10, 100, 30))
        self.NextQuestionBtn.setObjectName("NextQuestionBtn")
        self.QuestionLabel = QtWidgets.QLabel(QuizWidget)
        self.QuestionLabel.setGeometry(QtCore.QRect(10, 110, 770, 50))
        self.QuestionLabel.setAutoFillBackground(False)
        self.QuestionLabel.setFrameShape(QtWidgets.QFrame.Box)
        self.QuestionLabel.setLineWidth(1)
        self.QuestionLabel.setText("")
        self.QuestionLabel.setWordWrap(True)
        self.QuestionLabel.setObjectName("QuestionLabel")
        self.BackToMenuBtn = QtWidgets.QPushButton(QuizWidget)
        self.BackToMenuBtn.setGeometry(QtCore.QRect(10, 10, 100, 30))
        self.BackToMenuBtn.setObjectName("BackToMenuBtn")
        self.verticalLayoutWidget = QtWidgets.QWidget(QuizWidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 180, 771, 351))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.VBox = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.VBox.setContentsMargins(0, 0, 0, 0)
        self.VBox.setObjectName("VBox")
        self.CheckBtn = QtWidgets.QPushButton(QuizWidget)
        self.CheckBtn.setGeometry(QtCore.QRect(560, 540, 100, 30))
        self.CheckBtn.setObjectName("CheckBtn")
        self.ResetBtn = QtWidgets.QPushButton(QuizWidget)
        self.ResetBtn.setGeometry(QtCore.QRect(680, 540, 100, 30))
        self.ResetBtn.setObjectName("ResetBtn")
        self.ThemeLabel = QtWidgets.QLabel(QuizWidget)
        self.ThemeLabel.setGeometry(QtCore.QRect(10, 50, 770, 50))
        self.ThemeLabel.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ThemeLabel.setText("")
        self.ThemeLabel.setObjectName("ThemeLabel")

        self.retranslateUi(QuizWidget)
        QtCore.QMetaObject.connectSlotsByName(QuizWidget)

    def retranslateUi(self, QuizWidget):
        _translate = QtCore.QCoreApplication.translate
        QuizWidget.setWindowTitle(_translate("QuizWidget", "Form"))
        self.PrevQuestionBtn.setText(_translate("QuizWidget", "Предыдущий"))
        self.NextQuestionBtn.setText(_translate("QuizWidget", "Следующий"))
        self.BackToMenuBtn.setText(_translate("QuizWidget", "Меню"))
        self.CheckBtn.setText(_translate("QuizWidget", "Проверить"))
        self.ResetBtn.setText(_translate("QuizWidget", "Сбросить"))


class QuizWidget(QtWidgets.QWidget, Ui_QuizWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)

    def set_question(self, question: ThemeQuestion, answers=()):
        self.QuestionLabel.setText(question.value)

        if set(answers) == question.correct_answer:
            self.QuestionLabel.setStyleSheet("color: green")
        elif answers:
            self.QuestionLabel.setStyleSheet("color: red")
        else:
            self.QuestionLabel.setStyleSheet("")

        v_box_layout = self.VBox.layout()
        for btn in [v_box_layout.itemAt(idx).widget() for idx in range(v_box_layout.count())]:
            v_box_layout.removeWidget(btn)

        answer_type = question.answer_type
        btn_type = QtWidgets.QRadioButton if answer_type == AnswerTypes.ONLY_ONE else QtWidgets.QCheckBox
        for elem in question.answer_variants:
            _id, _value = elem
            btn = btn_type(_value)

            if _id in answers:
                btn.setChecked(True)

            if set(answers) == question.correct_answer:
                btn.setDisabled(True)

            self.VBox.addWidget(btn)

    def set_theme_name(self, theme_name: str):
        self.ThemeLabel.setText(theme_name)
        self.ThemeLabel.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)

    def reset_btns(self):
        self.QuestionLabel.setStyleSheet("")

        v_box_layout = self.VBox.layout()
        for idx in range(v_box_layout.count()):
            btn = v_box_layout.itemAt(idx).widget()
            if isinstance(btn, QtWidgets.QRadioButton):
                btn.setAutoExclusive(False)
                btn.setChecked(False)
                btn.setAutoExclusive(True)
            else:
                btn.setChecked(False)

    def set_correct_question_label(self):
        layout = self.VBox.layout()
        for idx in range(layout.count()):
            self.VBox.itemAt(idx).widget().setDisabled(True)
        self.QuestionLabel.setStyleSheet("color: green")

    def set_incorrect_question_label(self):
        self.QuestionLabel.setStyleSheet("color: red")
